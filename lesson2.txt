What happens when you initialize a repository? Why do you need to do it?

	When I initialize a repository a directory called .git is being created. This
	is necessary, so that git knows that here is an repository and have an directory
	where it could save the changes I've done every commit.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Files which are in the staging area will be commited to the repsoitory. It offers,
	that you can edit multiple files and nevertheless you can commit logical parts.

How can you use the staging area to make sure you have one commit per logical
change?

	I can see in the staging area, that there are only those files inside, where the
	change was made. Also I	can see with the git diff --staged, that i have only made
	one logical change in every file.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	- when to try a new experimental feature which can destroy whole program
	- add a new language
	- redesign the UI
	
	Branches help to experiment with the project, but having an executable and stable
	version at every time.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
